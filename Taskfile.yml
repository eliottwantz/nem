# https://taskfile.dev

version: "3"

dotenv:
  - ".env"

tasks:
  dev:
    cmd: watchexec -rc -e go,mod,env --project-origin . -- go run .
    desc: Watch go and run

  build:
    cmd: GCO_ENABLED=0 go build -ldflags="-s -w" -o bin/app .
    desc: Build the go app

  run:
    cmd: ./bin/app
    desc: Run the go app

  clean:
    cmds:
      - rm -rf bin

  lint:
    cmd: golangci-lint run
    desc: Lint the go app

  fmt:
    cmd: gofumpt -l -w .
    desc: Format the go app

  stripe:
    cmds:
      - stripe listen --forward-to localhost:5173/stripe/webhooks

  desktop:
    dir: "./web"
    cmds:
      - pnpm tauri dev -r cargo-zigbuild # Use cargo-zigbuild for Zig linker

  up:
    cmds:
      - docker compose -f web/compose.yaml up -d
    desc: Start containers

  down:
    cmds:
      - docker compose -f web/compose.yaml down
    desc: Stop containers

  resetdb:
    cmds:
      - docker compose -f web/compose.yaml down -v
      - task: up
      - platforms: [windows]
        cmd: timeout 1
      - platforms: [linux]
        cmd: sleep 1
      - cd web && pnpm db:push
      - cd web && pnpm db:seed
    desc: Reset db with seed

  certs:
    cmd: openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout certs/localhost.key -out certs/localhost.crt
